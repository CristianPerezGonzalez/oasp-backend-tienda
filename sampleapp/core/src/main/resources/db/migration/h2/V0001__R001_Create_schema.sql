-- This is the SQL script for setting up the DDL for the h2 database
-- In a typical project you would only distinguish between main and test for flyway SQLs
-- However, in this sample application we provde support for multiple databases in parallel
-- You can simply choose the DB of your choice by setting spring.profiles.active=XXX in config/application.properties
-- Assuming that the preconfigured user exists with according credentials using the included SQLs

CREATE SEQUENCE HIBERNATE_SEQUENCE START WITH 10;

CREATE TABLE TArticulo (
  id BIGINT NOT NULL AUTO_INCREMENT,
   nombre varchar(20),
  precio integer,
  modificationCounter INTEGER NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE TCliente (
  id BIGINT NOT NULL AUTO_INCREMENT,
  dni varchar(9),
  nombre varchar(20),
  modificationCounter INTEGER NOT NULL,
  primary key (id)
);

create table TEstado (
  id BIGINT NOT NULL AUTO_INCREMENT,
  codestado varchar(1) NOT NULL unique,
  descripcion varchar(25) NOT NULL,
  modificationCounter INTEGER NOT NULL,
  primary key (codestado)
);

create table TPedido (
  id BIGINT NOT NULL AUTO_INCREMENT,
  codcliente BIGINT,
  codestado BIGINT,
  descripcion varchar(20),
  modificationCounter INTEGER NOT NULL,
  primary key (id),
  foreign key (codcliente) references TCliente,
  foreign key (codestado) references TEstado(id)
);



create table TDetalle (
  id BIGINT NOT NULL AUTO_INCREMENT,
  pedidoid BIGINT,
  codarticulo BIGINT,
  uds integer check (uds >0),
  precio integer,
  codestado BIGINT,
  modificationCounter INTEGER NOT NULL,
  primary key (id),
  foreign key (pedidoid) references TPedido,
  foreign key (codarticulo) references TArticulo,
  foreign key (codestado) references TEstado(id)
);



create table TFactura (
  id BIGINT NOT NULL AUTO_INCREMENT,
  codpedido BIGINT,
  descripcion varchar(50),
  modificationCounter INTEGER NOT NULL,
  primary key (id),
  foreign key (codpedido) references TPedido
);

create table TDetalleFactura (
  id BIGINT NOT NULL AUTO_INCREMENT,
  codfactura BIGINT,
  codarticulo BIGINT,
  uds integer check (uds >0),
  precio integer,
  modificationCounter INTEGER NOT NULL,
  primary key (id),
  foreign key (codfactura) references TFactura,
  foreign key (codarticulo) references TArticulo
);

-- *** BinaryObject (BLOBs) ***
CREATE TABLE BinaryObject (
  id BIGINT NOT NULL AUTO_INCREMENT,
  modificationCounter INTEGER NOT NULL,
  data BLOB(2147483647),
  size BIGINT NOT NULL,
  mimeType VARCHAR(255),
  PRIMARY KEY (ID)
);

-- *** RevInfo (Commit log for envers audit trail) ***
CREATE TABLE RevInfo(
  id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
  timestamp BIGINT NOT NULL,
  user VARCHAR(255)
);

